var search_data = {"index":{"searchIndex":["ability","admincontroller","adminhelper","applicationcontroller","cancan","applicationhelper","character","vicevalidator","virtuevalidator","characterscontroller","charactershelper","chronicle","chroniclescontroller","chronicleshelper","clique","cliquescontroller","cliqueshelper","comment","commenthelper","commentscontroller","ideologiescontroller","ideologieshelper","ideology","nature","naturescontroller","natureshelper","serviceshelper","splat","staticcontroller","statichelper","subnature","uniqueinchroniclevalidator","user","change_selected_chronicle()","chronicle_setup()","clickable_specialties()","clickable_stats()","create()","create()","create()","create()","create()","create()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","dot_format()","edit()","edit()","edit()","edit()","edit()","find_npcs()","generalize_stat_name()","get_stat()","hidden_if()","index()","index()","index()","index()","index()","index()","is_changeling?()","is_geist?()","is_hunter?()","is_mage?()","is_mortal?()","is_mummy?()","is_possessed?()","is_promethean?()","is_spirit?()","is_vampire?()","is_werewolf?()","known_to()","known_to()","li_active_if()","list_for_nature()","make_rollable()","manage()","markdown_description()","max_infernal_will()","new()","new()","new()","new()","new()","new()","new()","owned_by_user?()","possess()","preview()","roll()","save_current()","save_notes()","shapeshift()","show()","show()","show()","show()","show()","simple_markdown_format()","super_user?()","to_param()","to_param()","to_param()","to_param()","update()","update()","update()","update()","update()","update_chronicle()","update_nature()","update_splat()","validate_each()","validate_each()","validate_each()","readme"],"longSearchIndex":["ability","admincontroller","adminhelper","applicationcontroller","applicationcontroller::cancan","applicationhelper","character","character::vicevalidator","character::virtuevalidator","characterscontroller","charactershelper","chronicle","chroniclescontroller","chronicleshelper","clique","cliquescontroller","cliqueshelper","comment","commenthelper","commentscontroller","ideologiescontroller","ideologieshelper","ideology","nature","naturescontroller","natureshelper","serviceshelper","splat","staticcontroller","statichelper","subnature","uniqueinchroniclevalidator","user","chroniclescontroller#change_selected_chronicle()","applicationcontroller#chronicle_setup()","charactershelper#clickable_specialties()","charactershelper#clickable_stats()","characterscontroller#create()","chroniclescontroller#create()","cliquescontroller#create()","commentscontroller#create()","ideologiescontroller#create()","naturescontroller#create()","characterscontroller#destroy()","chroniclescontroller#destroy()","cliquescontroller#destroy()","commentscontroller#destroy()","ideologiescontroller#destroy()","naturescontroller#destroy()","charactershelper#dot_format()","characterscontroller#edit()","chroniclescontroller#edit()","cliquescontroller#edit()","ideologiescontroller#edit()","naturescontroller#edit()","chronicle#find_npcs()","charactershelper#generalize_stat_name()","character#get_stat()","applicationhelper#hidden_if()","characterscontroller#index()","chroniclescontroller#index()","cliquescontroller#index()","ideologiescontroller#index()","naturescontroller#index()","staticcontroller#index()","character#is_changeling?()","character#is_geist?()","character#is_hunter?()","character#is_mage?()","character#is_mortal?()","character#is_mummy?()","character#is_possessed?()","character#is_promethean?()","character#is_spirit?()","character#is_vampire?()","character#is_werewolf?()","character::known_to()","clique::known_to()","applicationhelper#li_active_if()","subnature::list_for_nature()","charactershelper#make_rollable()","admincontroller#manage()","character#markdown_description()","character#max_infernal_will()","ability::new()","characterscontroller#new()","chroniclescontroller#new()","cliquescontroller#new()","commentscontroller#new()","ideologiescontroller#new()","naturescontroller#new()","clique#owned_by_user?()","characterscontroller#possess()","characterscontroller#preview()","characterscontroller#roll()","characterscontroller#save_current()","characterscontroller#save_notes()","characterscontroller#shapeshift()","characterscontroller#show()","chroniclescontroller#show()","cliquescontroller#show()","ideologiescontroller#show()","naturescontroller#show()","charactershelper#simple_markdown_format()","user#super_user?()","character#to_param()","chronicle#to_param()","clique#to_param()","ideology#to_param()","characterscontroller#update()","chroniclescontroller#update()","cliquescontroller#update()","ideologiescontroller#update()","naturescontroller#update()","characterscontroller#update_chronicle()","characterscontroller#update_nature()","characterscontroller#update_splat()","character::vicevalidator#validate_each()","character::virtuevalidator#validate_each()","uniqueinchroniclevalidator#validate_each()",""],"info":[["Ability","","Ability.html","","<p>This class handles authorization via the CanCan gem. The only real contents\nof it is Ability.initialize(user) …\n"],["AdminController","","AdminController.html","","<p>The admin controller will handle administrative functions, such as managing\nusers with admin access. …\n"],["AdminHelper","","AdminHelper.html","","<p>Admin helper module\n"],["ApplicationController","","ApplicationController.html","","<p>Filters added to this controller apply to all controllers in the\napplication. Likewise, all the methods …\n"],["ApplicationController::CanCan","","ApplicationController/CanCan.html","",""],["ApplicationHelper","","ApplicationHelper.html","","<p>Application-wide helper module\n"],["Character","","Character.html","","<p>The basic building block of personae, the character class represents a\nWorld of Darkness character.  …\n"],["Character::ViceValidator","","Character/ViceValidator.html","","<p>Creates a validator for Character.vice . Valid vices are &#39;Envy&#39;,\n&#39;Gluttony&#39;, &#39;Greed&#39;, …\n"],["Character::VirtueValidator","","Character/VirtueValidator.html","","<p>Creates a validator for Character.virtue . Valid virtues are\n&#39;Charity&#39;, &#39;Faith&#39;, &#39;Fortitude&#39; …\n"],["CharactersController","","CharactersController.html","","<p>Controller for character actions: show/create/edit/etc\n"],["CharactersHelper","","CharactersHelper.html","","<p>Character helper module\n"],["Chronicle","","Chronicle.html","","<p>Chronicles contain characters and cliques – presumably ideologies and\nnatures will be static throughout …\n"],["ChroniclesController","","ChroniclesController.html","","<p>Controller for chronicle actions: show/create/edit/etc\n"],["ChroniclesHelper","","ChroniclesHelper.html","","<p>Chronicle helper module\n"],["Clique","","Clique.html","",""],["CliquesController","","CliquesController.html","","<p>Controller for clique actions: show/create/edit/etc\n"],["CliquesHelper","","CliquesHelper.html","","<p>Clique helper module\n"],["Comment","","Comment.html","","<p>Implements basic commenting support\n"],["CommentHelper","","CommentHelper.html","","<p>Comment helper module\n"],["CommentsController","","CommentsController.html","","<p>Controller for comment actions: create/edit/destroy\n"],["IdeologiesController","","IdeologiesController.html","","<p>Controller for ideology actions: show/create/edit/etc\n"],["IdeologiesHelper","","IdeologiesHelper.html","","<p>Ideologies helper module\n"],["Ideology","","Ideology.html","","<p>Ideologies are loose social organizations that are typically\nworld-spanning. Obviously, their members …\n"],["Nature","","Nature.html","","<p>Represents the inborn tendencies and attitudes of a supernatural template.\n"],["NaturesController","","NaturesController.html","","<p>Controller for nature actions: show/create/edit/etc\n"],["NaturesHelper","","NaturesHelper.html","","<p>Natures helper module\n"],["ServicesHelper","","ServicesHelper.html","","<p>helper module for services controller\n"],["Splat","","Splat.html","","<p>Represents a splat, which is to say a supernatural template in the World of\nDarkness. While technically …\n"],["StaticController","","StaticController.html","","<p>serve up static content through a controller so it can use the rest of the\nsite&#39;s layout\n"],["StaticHelper","","StaticHelper.html","","<p>static content helpers\n"],["Subnature","","Subnature.html","","<p>Subnature is only meaningful to the Changeling splat, and is included to\nrepresent their kiths. No other …\n"],["UniqueInChronicleValidator","","UniqueInChronicleValidator.html","","<p>Creates a validator which ensures only one Character or Clique may have the\nsame name within a Chronicle …\n"],["User","","User.html","","<p>Contains user-specific data. Which characters are theirs, which cliques and\nchromicles they&#39;ve created, …\n"],["change_selected_chronicle","ChroniclesController","ChroniclesController.html#method-i-change_selected_chronicle","()","<p>POST /chronicles/change_selected_chronicle\n"],["chronicle_setup","ApplicationController","ApplicationController.html#method-i-chronicle_setup","()","<p>since users who aren&#39;t logged in won&#39;t have a current_user we need\nto stick a value in their …\n"],["clickable_specialties","CharactersHelper","CharactersHelper.html#method-i-clickable_specialties","(field)",""],["clickable_stats","CharactersHelper","CharactersHelper.html#method-i-clickable_stats","(field)",""],["create","CharactersController","CharactersController.html#method-i-create","()","<p>POST /characters POST /characters.xml\n"],["create","ChroniclesController","ChroniclesController.html#method-i-create","()","<p>POST /chronicles POST /chronicles.xml\n"],["create","CliquesController","CliquesController.html#method-i-create","()","<p>POST /cliques POST /cliques.xml\n"],["create","CommentsController","CommentsController.html#method-i-create","()","<p>POST /characters/comments POST /characters/comments\n"],["create","IdeologiesController","IdeologiesController.html#method-i-create","()","<p>POST /ideologies POST /ideologies.xml\n"],["create","NaturesController","NaturesController.html#method-i-create","()","<p>POST /natures POST /natures.xml\n"],["destroy","CharactersController","CharactersController.html#method-i-destroy","()","<p>DELETE /characters/1 DELETE /characters/1.xml\n"],["destroy","ChroniclesController","ChroniclesController.html#method-i-destroy","()","<p>DELETE /chronicles/1 DELETE /chronicles/1.xml\n"],["destroy","CliquesController","CliquesController.html#method-i-destroy","()","<p>DELETE /cliques/1 DELETE /cliques/1.xml\n"],["destroy","CommentsController","CommentsController.html#method-i-destroy","()","<p>DELETE /characters/comments/1 DELETE /characters/comments/1.xml\n"],["destroy","IdeologiesController","IdeologiesController.html#method-i-destroy","()","<p>DELETE /ideologies/1 DELETE /ideologies/1.xml\n"],["destroy","NaturesController","NaturesController.html#method-i-destroy","()","<p>DELETE /natures/1 DELETE /natures/1.xml\n"],["dot_format","CharactersHelper","CharactersHelper.html#method-i-dot_format","(rating)","<p>breaks strings of •s into groups of 5 for readability\n"],["edit","CharactersController","CharactersController.html#method-i-edit","()","<p>GET /characters/1/edit\n"],["edit","ChroniclesController","ChroniclesController.html#method-i-edit","()","<p>GET /chronicles/1/edit\n"],["edit","CliquesController","CliquesController.html#method-i-edit","()","<p>GET /cliques/1/edit\n"],["edit","IdeologiesController","IdeologiesController.html#method-i-edit","()","<p>GET /ideologies/1/edit\n"],["edit","NaturesController","NaturesController.html#method-i-edit","()","<p>GET /natures/1/edit\n"],["find_npcs","Chronicle","Chronicle.html#method-i-find_npcs","(user, page)","<p>gets a paginated list of NPCs based on chronicle and user\n"],["generalize_stat_name","CharactersHelper","CharactersHelper.html#method-i-generalize_stat_name","(name)",""],["get_stat","Character","Character.html#method-i-get_stat","(stat)",""],["hidden_if","ApplicationHelper","ApplicationHelper.html#method-i-hidden_if","(condition)",""],["index","CharactersController","CharactersController.html#method-i-index","()","<p>GET /characters GET /characters.xml\n"],["index","ChroniclesController","ChroniclesController.html#method-i-index","()","<p>GET /chronicles GET /chronicles.xml\n"],["index","CliquesController","CliquesController.html#method-i-index","()","<p>GET /cliques GET /cliques.xml\n"],["index","IdeologiesController","IdeologiesController.html#method-i-index","()","<p>GET /ideologies GET /ideologies.xml\n"],["index","NaturesController","NaturesController.html#method-i-index","()","<p>GET /natures GET /natures.xml\n"],["index","StaticController","StaticController.html#method-i-index","()","<p>GET index.html\n"],["is_changeling?","Character","Character.html#method-i-is_changeling-3F","()","<p>Returns true if the character is a changeling.\n"],["is_geist?","Character","Character.html#method-i-is_geist-3F","()","<p>Returns true if the character is a geist.\n"],["is_hunter?","Character","Character.html#method-i-is_hunter-3F","()","<p>Returns true if the character is a hunter (close enough).\n"],["is_mage?","Character","Character.html#method-i-is_mage-3F","()","<p>Returns true if the character is a mage.\n"],["is_mortal?","Character","Character.html#method-i-is_mortal-3F","()","<p>Returns true if the character is a mortal or a hunter (close enough).\n"],["is_mummy?","Character","Character.html#method-i-is_mummy-3F","()","<p>Returns true if the character is a mummy.\n"],["is_possessed?","Character","Character.html#method-i-is_possessed-3F","()","<p>Returns true if the character is possessed. (This is mostly just for\nstandardization)\n"],["is_promethean?","Character","Character.html#method-i-is_promethean-3F","()","<p>Returns true if the character is a promethean.\n"],["is_spirit?","Character","Character.html#method-i-is_spirit-3F","()","<p>Returns true if the character is a ghost or spirit or anything that uses\nthat template\n"],["is_vampire?","Character","Character.html#method-i-is_vampire-3F","()","<p>Returns true if the character is a vampire.\n"],["is_werewolf?","Character","Character.html#method-i-is_werewolf-3F","()","<p>Returns true if the character is a werewolf.\n"],["known_to","Character","Character.html#method-c-known_to","(user, selected_chronicle=user.selected_chronicle.id)","<p>List characters known to the given user\n"],["known_to","Clique","Clique.html#method-c-known_to","(user, chronicle_id=user.selected_chronicle.id)","<p>List cliques konwn to the given user if the user provided is nil, create a\nnew, temporary user as a base …\n"],["li_active_if","ApplicationHelper","ApplicationHelper.html#method-i-li_active_if","(condition, attributes = {}, &block)","<p>creates a li with class=“selected” if the condition is true\n"],["list_for_nature","Subnature","Subnature.html#method-c-list_for_nature","(nature)","<p>List subnatures for a given nature\n"],["make_rollable","CharactersHelper","CharactersHelper.html#method-i-make_rollable","(field)",""],["manage","AdminController","AdminController.html#method-i-manage","()","<p>GET /admin/manage GET /admin/manage.xml POST /admin/manage\n"],["markdown_description","Character","Character.html#method-i-markdown_description","()",""],["max_infernal_will","Character","Character.html#method-i-max_infernal_will","()",""],["new","Ability","Ability.html#method-c-new","(user)","<p>Contains the authorization permissions map for user objects. As of now, the\nonly two roles are admin …\n"],["new","CharactersController","CharactersController.html#method-i-new","()","<p>GET /characters/new GET /characters/new.xml\n"],["new","ChroniclesController","ChroniclesController.html#method-i-new","()","<p>GET /chronicles/new GET /chronicles/new.xml\n"],["new","CliquesController","CliquesController.html#method-i-new","()","<p>GET /cliques/new GET /cliques/new.xml\n"],["new","CommentsController","CommentsController.html#method-i-new","()","<p>GET /characters/comments/new GET /characters/comments/new.xml\n"],["new","IdeologiesController","IdeologiesController.html#method-i-new","()","<p>GET /ideologies/new GET /ideologies/new.xml\n"],["new","NaturesController","NaturesController.html#method-i-new","()","<p>GET /natures/new GET /natures/new.xml\n"],["owned_by_user?","Clique","Clique.html#method-i-owned_by_user-3F","(user)","<p>Returns true if the character is owned by the logged in user or if the\nlogged in user is the a User.super_user? …\n"],["possess","CharactersController","CharactersController.html#method-i-possess","()","<p>GET /characters/possess\n"],["preview","CharactersController","CharactersController.html#method-i-preview","()","<p>GET /characters/preview\n"],["roll","CharactersController","CharactersController.html#method-i-roll","()","<p>POST /characters/1/roll\n"],["save_current","CharactersController","CharactersController.html#method-i-save_current","()","<p>PUT /characters/1/save_current\n<p>this will only save the current_health and current_willpower attributes …\n"],["save_notes","CharactersController","CharactersController.html#method-i-save_notes","()","<p>PUT /characters/1/save_notes\n<p>this will animate saving the notes on a character&#39;s page\n"],["shapeshift","CharactersController","CharactersController.html#method-i-shapeshift","()","<p>POST /characters/shapeshift\n"],["show","CharactersController","CharactersController.html#method-i-show","()","<p>GET /characters/1 GET /characters/1.xml\n"],["show","ChroniclesController","ChroniclesController.html#method-i-show","()","<p>GET /chronicles/1 GET /chronicles/1.xml\n"],["show","CliquesController","CliquesController.html#method-i-show","()","<p>GET /cliques/1 GET /cliques/1.xml\n"],["show","IdeologiesController","IdeologiesController.html#method-i-show","()","<p>GET /ideologies/1 GET /ideologies/1.xml\n"],["show","NaturesController","NaturesController.html#method-i-show","()","<p>GET /natures/1 GET /natures/1.xml\n"],["simple_markdown_format","CharactersHelper","CharactersHelper.html#method-i-simple_markdown_format","(field)",""],["super_user?","User","User.html#method-i-super_user-3F","(chronicle)","<p>Returns true if the current user is an admin for the specified chronicle.\n"],["to_param","Character","Character.html#method-i-to_param","()","<p>Show the character&#39;s name in the url\n"],["to_param","Chronicle","Chronicle.html#method-i-to_param","()","<p>Show the chronicle&#39;s name in the url\n"],["to_param","Clique","Clique.html#method-i-to_param","()","<p>Show the clique&#39;s name in the url\n"],["to_param","Ideology","Ideology.html#method-i-to_param","()","<p>Show the ideology&#39;s name in the url\n"],["update","CharactersController","CharactersController.html#method-i-update","()","<p>PUT /characters/1 PUT /characters/1.xml\n"],["update","ChroniclesController","ChroniclesController.html#method-i-update","()","<p>PUT /chronicles/1 PUT /chronicles/1.xml\n"],["update","CliquesController","CliquesController.html#method-i-update","()","<p>PUT /cliques/1 PUT /cliques/1.xml\n"],["update","IdeologiesController","IdeologiesController.html#method-i-update","()","<p>PUT /ideologies/1 PUT /ideologies/1.xml\n"],["update","NaturesController","NaturesController.html#method-i-update","()","<p>PATCH /natures/1 PATCH /natures/1.xml\n"],["update_chronicle","CharactersController","CharactersController.html#method-i-update_chronicle","()","<p>POST /characters/update_chronicle\n"],["update_nature","CharactersController","CharactersController.html#method-i-update_nature","()","<p>POST /characters/update_nature\n"],["update_splat","CharactersController","CharactersController.html#method-i-update_splat","()","<p>POST /characters/update_splat\n"],["validate_each","Character::ViceValidator","Character/ViceValidator.html#method-i-validate_each","(record, attribute, value)","<p>Validates all records passed to it\n"],["validate_each","Character::VirtueValidator","Character/VirtueValidator.html#method-i-validate_each","(record, attribute, value)","<p>Validates all records passed to it\n"],["validate_each","UniqueInChronicleValidator","UniqueInChronicleValidator.html#method-i-validate_each","(record, attribute, value)","<p>Validates all records passed to it\n"],["README","","README_rdoc.html","","<p>License\n<p>Personae is free software: you can redistribute it and/or modify it under\nthe terms of the GNU …\n"]]}}